# Categorias do IPCA
query <- bdplyr("br_ibge_ipca.mes_categoria_brasil")
df_ipca_categorias <- bd_collect(query)
# Complementação do IPCA de categorias
ipca_categorias_complemento <- read_excel('data/IPCA_categorias.xlsx',col_names = T)
# Reajuste dos nomes das colunas para combinar com o id_categoria
colnames(ipca_categorias_complemento) <- c('data',gsub("[^0-9]", "", colnames(ipca_categorias_complemento)[2:81]))
ipca_categorias_complemento
# IPCA de categorias
df_ipca_categorias
ipca_categorias <- df_ipca_categorias %>%
select(!c(id_categoria_bd,variacao_anual)) %>%
# mutate(id_categoria = as.numeric(id_categoria)) %>%
# Filtrando somente até ítens do IPCA
filter(id_categoria < 10000) %>%
group_by(id_categoria) %>%
mutate(variacao_acumulada = (cumprod(1+(variacao_mensal/100))-1)*100)
ipca_categorias
# Criando um dataframe vazio e combinando ele com o complemento
empty_df <- data.frame(matrix(data = 0.5,
nrow = nrow(ipca_categorias_complemento),
ncol = ncol(ipca_categorias_complemento)))
colnames(empty_df) <- colnames(ipca_categorias_complemento)
df_ipca_categorias_complemento <- rbind(ipca_categorias_complemento,
empty_df)
df_ipca_categorias_complemento
# Criando um tibble que possui os valores falantes do IPCA acumulado em 12 meses
df_ipca_categorias_complemento <- df_ipca_categorias_complemento %>%
mutate(across(!data, ~(as.numeric(.)/100)+1)) %>%
mutate(across(!data, ~ round((RcppRoll::roll_prodr(., n = 12, na.rm = T, fill = 1.04)-1)*100,2))) %>%
select(!data) %>%
slice(13:(n()-1)) %>%
mutate(ano = 2020) %>%
mutate(mes = 1:11) %>%
dplyr::select(ano,mes,everything())
df_ipca_categorias_complemento
ipca_categorias_melted1 <- reshape2::melt(df_ipca_categorias_complemento,
id.vars=(c('ano','mes')))
colnames(ipca_categorias_melted1) <- c('ano','mes','id_categoria','value')
ipca_categorias_melted1 <- ipca_categorias_melted1   %>%
mutate(id_categoria = as.factor(id_categoria)) %>%
arrange(id_categoria)
# Pegando os valores acumulados em 12 meses do IPCA de dezembro/20 até 22
ipca_categorias_melted2 <- ipca_categorias %>%
select(ano,mes,id_categoria,variacao_doze_meses) %>%
# mutate(id_categoria = as.factor(id_categoria)) %>%
# mutate(id_categoria = as.numeric(id_categoria)) %>%
# arrange(id_categoria) %>%
dplyr::rename(value = variacao_doze_meses) %>%
drop_na()
# Há um número de categorias menor na IPCA a partir de 2020
length(unique(ipca_categorias_melted1$id_categoria))
length(unique(ipca_categorias_melted2$id_categoria))
# Identificando qual grupo
setdiff(unique(ipca_categorias_melted1$id_categoria),
unique(ipca_categorias_melted2$id_categoria))
ipca_categorias <- df_ipca_categorias %>%
select(!c(id_categoria_bd,variacao_anual)) %>%
# mutate(id_categoria = as.numeric(id_categoria)) %>%
# Filtrando somente até ítens do IPCA
filter(id_categoria < 10000) %>%
group_by(id_categoria) %>%
mutate(variacao_acumulada = (cumprod(1+(variacao_mensal/100))-1)*100)
ipca_categorias
ipca_categorias <- df_ipca_categorias %>%
select(!c(id_categoria_bd,variacao_anual)) %>%
mutate(id_categoria = as.numeric(id_categoria)) %>%
# Filtrando somente até ítens do IPCA
filter(id_categoria < 10000) %>%
group_by(id_categoria) %>%
mutate(variacao_acumulada = (cumprod(1+(variacao_mensal/100))-1)*100)
ipca_categorias
# Criando um dataframe vazio e combinando ele com o complemento
empty_df <- data.frame(matrix(data = 0.5,
nrow = nrow(ipca_categorias_complemento),
ncol = ncol(ipca_categorias_complemento)))
colnames(empty_df) <- colnames(ipca_categorias_complemento)
df_ipca_categorias_complemento <- rbind(ipca_categorias_complemento,
empty_df)
df_ipca_categorias_complemento
# Criando um tibble que possui os valores falantes do IPCA acumulado em 12 meses
df_ipca_categorias_complemento <- df_ipca_categorias_complemento %>%
mutate(across(!data, ~(as.numeric(.)/100)+1)) %>%
mutate(across(!data, ~ round((RcppRoll::roll_prodr(., n = 12, na.rm = T, fill = 1.04)-1)*100,2))) %>%
select(!data) %>%
slice(13:(n()-1)) %>%
mutate(ano = 2020) %>%
mutate(mes = 1:11) %>%
dplyr::select(ano,mes,everything())
df_ipca_categorias_complemento
ipca_categorias_melted1 <- reshape2::melt(df_ipca_categorias_complemento,
id.vars=(c('ano','mes')))
colnames(ipca_categorias_melted1) <- c('ano','mes','id_categoria','value')
ipca_categorias_melted1 <- ipca_categorias_melted1   %>%
mutate(id_categoria = as.factor(id_categoria)) %>%
arrange(id_categoria)
# Pegando os valores acumulados em 12 meses do IPCA de dezembro/20 até 22
ipca_categorias_melted2 <- ipca_categorias %>%
select(ano,mes,id_categoria,variacao_doze_meses) %>%
# mutate(id_categoria = as.factor(id_categoria)) %>%
# mutate(id_categoria = as.numeric(id_categoria)) %>%
# arrange(id_categoria) %>%
dplyr::rename(value = variacao_doze_meses) %>%
drop_na()
# Há um número de categorias menor na IPCA a partir de 2020
length(unique(ipca_categorias_melted1$id_categoria))
length(unique(ipca_categorias_melted2$id_categoria))
# Identificando qual grupo
setdiff(unique(ipca_categorias_melted1$id_categoria),
unique(ipca_categorias_melted2$id_categoria))
ipca_categorias_melted1 <- ipca_categorias_melted1 %>%
filter(id_categoria != 7203)
# Conferindo se persiste a diferença
setdiff(unique(ipca_categorias_melted1$id_categoria),
unique(ipca_categorias_melted2$id_categoria))
# Combinando dados
ipca_categorias_melted <- rbind(ipca_categorias_melted1,
ipca_categorias_melted2)
ipca_categorias_melted <- ipca_categorias_melted %>%
mutate(id_categoria = as.character.numeric_version(id_categoria)) %>%
mutate(id_categoria = as.numeric(id_categoria)) %>%
arrange(id_categoria)
# Criando nova coluna no tibble original
ipca_categorias$variacao_doze_meses <- ipca_categorias_melted$value
# Tibble final com todos os valores
ipca_categorias <- ipca_categorias %>%
mutate(variacao_acumulada = round(variacao_acumulada, 2)) %>%
mutate(variacao_doze_meses = round(variacao_doze_meses, 2)) %>%
mutate(variacao_mensal = round(variacao_mensal, 2)) %>%
mutate(peso_mensal = round(peso_mensal, 2))
ipca_categorias
# Variação acumulada até 2022
ipca_categorias_acum_df <- ipca_categorias %>%
ungroup %>%
mutate(date = as.Date.character(paste0(ano,"-",mes,'-1'))) %>%
filter(id_categoria < 10) %>%
select(date,variacao_doze_meses,categoria)
ipca_categorias_acum_df
ipca_categorias_acum_plot <- ggplot(ipca_categorias_acum_df)  +
geom_hline(yintercept = 0, colour= 'darkgrey') +
geom_line(aes(x=date, y=variacao_doze_meses, color=categoria, linetype = categoria),stat="identity", size = 1) +
scale_y_continuous(labels = function(x) paste0(x, "%"),
breaks = scales::pretty_breaks(n = 6),
expand = c(0,0)) +
scale_x_date(date_breaks = '2 months',
date_minor_breaks = '6 months',
date_labels = "%b-%Y",expand = c(0, 0)) +
labs(title = '') +
# scale_fill_brewer(palette= 'Pastel2', name = '') +
# scale_color_brewer(palette="Set1", name = '') +
guides(title = NULL) +
ylab('') +
xlab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="bottom",
legend.title = element_blank(),
legend.text = element_text(size=12),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.title = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.8,size=11, colour = 'black'),
axis.text.y = element_text(size=14))
ipca_categorias_acum_plot
View(ipca_categorias_melted)
View(ipca_categorias_melted)
View(ipca_categorias)
View(ipca_categorias)
# Categorias do IPCA
query <- bdplyr("br_ibge_ipca.mes_categoria_brasil")
df_ipca_categorias <- bd_collect(query)
# IPCA de categorias
df_ipca_categorias
ipca_categorias <- df_ipca_categorias %>%
select(!c(id_categoria_bd,variacao_anual)) %>%
mutate(id_categoria = as.numeric(id_categoria)) %>%
# Filtrando somente até ítens do IPCA
filter(id_categoria < 10000) %>%
group_by(id_categoria) %>%
mutate(variacao_acumulada = (cumprod(1+(variacao_mensal/100))-1)*100)
ipca_categorias
# Criando um dataframe vazio e combinando ele com o complemento
empty_df <- data.frame(matrix(data = 0.5,
nrow = nrow(ipca_categorias_complemento),
ncol = ncol(ipca_categorias_complemento)))
colnames(empty_df) <- colnames(ipca_categorias_complemento)
df_ipca_categorias_complemento <- rbind(ipca_categorias_complemento,
empty_df)
df_ipca_categorias_complemento
View(df_ipca_categorias_complemento)
View(df_ipca_categorias_complemento)
df_ipca_categorias_complemento
# Criando um tibble que possui os valores falantes do IPCA acumulado em 12 meses
df_ipca_categorias_complemento <- df_ipca_categorias_complemento %>%
mutate(across(!data, ~(as.numeric(.)/100)+1)) %>%
mutate(across(!data, ~ round((RcppRoll::roll_prodr(., n = 12, na.rm = T, fill = 1.04)-1)*100,2))) %>%
select(!data) %>%
slice(13:(n()-1)) %>%
mutate(ano = 2020) %>%
mutate(mes = 1:11) %>%
dplyr::select(ano,mes,everything())
df_ipca_categorias_complemento
ipca_categorias_melted1 <- reshape2::melt(df_ipca_categorias_complemento,
id.vars=(c('ano','mes')))
colnames(ipca_categorias_melted1) <- c('ano','mes','id_categoria','value')
ipca_categorias_melted1 <- ipca_categorias_melted1   %>%
mutate(id_categoria = as.factor(id_categoria)) %>%
arrange(id_categoria)
# Pegando os valores acumulados em 12 meses do IPCA de dezembro/20 até 22
ipca_categorias_melted2 <- ipca_categorias %>%
select(ano,mes,id_categoria,variacao_doze_meses) %>%
# mutate(id_categoria = as.factor(id_categoria)) %>%
# mutate(id_categoria = as.numeric(id_categoria)) %>%
# arrange(id_categoria) %>%
dplyr::rename(value = variacao_doze_meses) %>%
drop_na()
# Há um número de categorias menor na IPCA a partir de 2020
length(unique(ipca_categorias_melted1$id_categoria))
length(unique(ipca_categorias_melted2$id_categoria))
# Identificando qual grupo
setdiff(unique(ipca_categorias_melted1$id_categoria),
unique(ipca_categorias_melted2$id_categoria))
ipca_categorias_melted1 <- ipca_categorias_melted1 %>%
filter(id_categoria != 7203)
# Conferindo se persiste a diferença
setdiff(unique(ipca_categorias_melted1$id_categoria),
unique(ipca_categorias_melted2$id_categoria))
# Combinando dados
ipca_categorias_melted <- rbind(ipca_categorias_melted1,
ipca_categorias_melted2)
ipca_categorias_melted <- ipca_categorias_melted %>%
mutate(id_categoria = as.character.numeric_version(id_categoria)) %>%
mutate(id_categoria = as.numeric(id_categoria)) %>%
arrange(id_categoria)
# Criando nova coluna no tibble original
ipca_categorias$variacao_doze_meses <- ipca_categorias_melted$value
# Tibble final com todos os valores
ipca_categorias <- ipca_categorias %>%
mutate(variacao_acumulada = round(variacao_acumulada, 2)) %>%
mutate(variacao_doze_meses = round(variacao_doze_meses, 2)) %>%
mutate(variacao_mensal = round(variacao_mensal, 2)) %>%
mutate(peso_mensal = round(peso_mensal, 2))
# Variação acumulada até 2022
ipca_categorias_acum_df <- ipca_categorias %>%
ungroup %>%
mutate(date = as.Date.character(paste0(ano,"-",mes,'-1'))) %>%
filter(id_categoria < 10) %>%
select(date,variacao_doze_meses,categoria)
ipca_categorias_acum_df
ipca_categorias_acum_plot <- ggplot(ipca_categorias_acum_df)  +
geom_hline(yintercept = 0, colour= 'darkgrey') +
geom_line(aes(x=date, y=variacao_doze_meses, color=categoria, linetype = categoria),stat="identity", size = 1) +
scale_y_continuous(labels = function(x) paste0(x, "%"),
breaks = scales::pretty_breaks(n = 6),
expand = c(0,0)) +
scale_x_date(date_breaks = '2 months',
date_minor_breaks = '6 months',
date_labels = "%b-%Y",expand = c(0, 0)) +
labs(title = '') +
# scale_fill_brewer(palette= 'Pastel2', name = '') +
# scale_color_brewer(palette="Set1", name = '') +
guides(title = NULL) +
ylab('') +
xlab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="bottom",
legend.title = element_blank(),
legend.text = element_text(size=12),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.title = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.8,size=11, colour = 'black'),
axis.text.y = element_text(size=14))
ipca_categorias_acum_plot
ipca_categorias <- df_ipca_categorias %>%
select(!c(id_categoria_bd,variacao_anual)) %>%
mutate(id_categoria = as.numeric(id_categoria)) %>%
# Filtrando somente até ítens do IPCA
filter(id_categoria < 10000) %>%
group_by(id_categoria) %>%
mutate(variacao_acumulada = (cumprod(1+(variacao_mensal/100))-1)*100)
ipca_categorias
ipca_categorias_melted
ipca_categorias %>%
left_join(ipca_categorias_melted, by = c('ano',
'mes',
'id_categoria'))
ipca_categorias_melted <- ipca_categorias_melted %>%
mutate(id_categoria = as.character.numeric_version(id_categoria)) %>%
mutate(id_categoria = as.numeric(id_categoria)) %>%
arrange(id_categoria) %>%
rename(variacao_doze_meses = value)
# Combinando dados
ipca_categorias_melted <- rbind(ipca_categorias_melted1,
ipca_categorias_melted2)
ipca_categorias_melted <- ipca_categorias_melted %>%
mutate(id_categoria = as.character.numeric_version(id_categoria)) %>%
mutate(id_categoria = as.numeric(id_categoria)) %>%
arrange(id_categoria) %>%
rename(variacao_doze_meses = value)
ipca_categorias %>%
left_join(ipca_categorias_melted, by = c('ano',
'mes',
'id_categoria'))
ipca_categorias_melted
ipca_categorias
ipca_categorias <- ipca_categorias %>%
arrange(id_categoria)
ipca_categorias
View(ipca_categorias)
View(ipca_categorias)
View(ipca_categorias_melted)
View(ipca_categorias_melted)
ipca_categorias %>%
left_join(ipca_categorias_melted, by = c('ano',
'mes',
'id_categoria'))
# Criando nova coluna no tibble original
ipca_categorias$variacao_doze_meses <- ipca_categorias_melted$value
# Criando nova coluna no tibble original
ipca_categorias$variacao_doze_meses <- ipca_categorias_melted$variacao_doze_meses
# Tibble final com todos os valores
ipca_categorias <- ipca_categorias %>%
mutate(variacao_acumulada = round(variacao_acumulada, 2)) %>%
mutate(variacao_doze_meses = round(variacao_doze_meses, 2)) %>%
mutate(variacao_mensal = round(variacao_mensal, 2)) %>%
mutate(peso_mensal = round(peso_mensal, 2))
ipca_categorias
# Variação acumulada até 2022
ipca_categorias_acum_df <- ipca_categorias %>%
ungroup %>%
mutate(date = as.Date.character(paste0(ano,"-",mes,'-1'))) %>%
filter(id_categoria < 10) %>%
select(date,variacao_doze_meses,categoria)
ipca_categorias_acum_df
ipca_categorias_acum_plot <- ggplot(ipca_categorias_acum_df)  +
geom_hline(yintercept = 0, colour= 'darkgrey') +
geom_line(aes(x=date, y=variacao_doze_meses, color=categoria, linetype = categoria),stat="identity", size = 1) +
scale_y_continuous(labels = function(x) paste0(x, "%"),
breaks = scales::pretty_breaks(n = 6),
expand = c(0,0)) +
scale_x_date(date_breaks = '2 months',
date_minor_breaks = '6 months',
date_labels = "%b-%Y",expand = c(0, 0)) +
labs(title = '') +
# scale_fill_brewer(palette= 'Pastel2', name = '') +
# scale_color_brewer(palette="Set1", name = '') +
guides(title = NULL) +
ylab('') +
xlab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="bottom",
legend.title = element_blank(),
legend.text = element_text(size=12),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.title = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.8,size=11, colour = 'black'),
axis.text.y = element_text(size=14))
ipca_categorias_acum_plot
p_ipca_categorias_acum <- ggplotly(ipca_categorias_acum_plot, tooltip = c("x", "y")) %>%
layout(legend = list(orientation = "h", x = 0, y = -0.3, title = '')) %>%
config(modeBarButtons = list(list("resetScale2d"),list('toImage'), list('toggleSpikelines'),list('hoverCompareCartesian'),list('hoverClosestCartesian')), displaylogo = FALSE)
p_ipca_categorias_acum
# IPCA de categorias
df_ipca_categorias
View(df_ipca_categorias)
View(df_ipca_categorias)
source("~/base_de_dados/Visualizacao_Inflacao/extracao_limpeza_dados.R", echo=TRUE)
source("~/base_de_dados/Visualizacao_Inflacao/elaboracao_figuras.R", echo=TRUE)
# Tabela de categorias
df_ipca_categorias
tabela_categorias <- DT::datatable(df_ipca_categorias %>%
ungroup %>%
select(!c(id_categoria)) %>%
mutate(across(c(ano,mes), ~ factor(.,ordered = T))),
rownames = FALSE,
options = list(pageLength = 20,
scrollX = TRUE,
searchHighlight = TRUE,
language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json')
),
class =  c('compact', 'white-space: nowrap', 'stripe'),
filter = 'top',
colnames = c('Ano',
'Mês',
'Descrição do Grupo/Subgrupo',
'Peso Mensal',
'Variação Mensal (%)',
'Variação acumulada em 12 meses (%)')
)
# Tabela de municípios e RM
ipca_rm_municipio
tabela_rm_municipio <- DT::datatable(ipca_rm_municipio %>%
ungroup %>%
mutate(across(c(ano), ~ factor(.,ordered = T))) %>%
select(ano,nome,categoria, peso_mensal, variacao_doze_meses),
rownames = FALSE,
options = list(pageLength = 20,
scrollX = TRUE,
searchHighlight = TRUE,
language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json')
),
class =  c('compact', 'white-space: nowrap', 'stripe'),
filter = 'top',
colnames = c('Ano',
'Município ou Região Metropolitana',
'Categoria ou índice cheio',
'Peso Mensal',
'Variação acumulada em 12 meses (%)')
)
tabela_rm_municipio <- DT::datatable(ipca_rm_municipio %>%
ungroup %>%
mutate(across(c(ano), ~ factor(.,ordered = T))) %>%
select(ano,nome,categoria, peso_mensal, variacao_doze_meses),
rownames = FALSE,
options = list(pageLength = 20,
scrollX = TRUE,
searchHighlight = TRUE,
language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json')
),
class =  c('compact', 'white-space: nowrap', 'stripe'),
filter = 'top',
colnames = c('Ano',
'Município ou Região Metropolitana',
'Categoria ou índice cheio',
'Peso Mensal',
'Variação acumulada em 12 meses (%)')
)
tabela_rm_municipio
tabela_categorias <- DT::datatable(df_ipca_categorias %>%
ungroup %>%
select(!c(id_categoria)) %>%
mutate(across(c(ano,mes), ~ factor(.,ordered = T))),
rownames = FALSE,
options = list(pageLength = 20,
scrollX = TRUE,
searchHighlight = TRUE,
language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json')
),
class =  c('compact', 'white-space: nowrap', 'stripe'),
filter = 'top',
colnames = c('Ano',
'Mês',
'Descrição do Grupo/Subgrupo',
'Peso Mensal',
'Variação Mensal (%)',
'Variação acumulada em 12 meses (%)')
)
tabela_categorias
# Tabela de categorias
df_ipca_categorias
# Tabela de categorias
ipca_categorias
# Tabela de categorias
ipca_categorias
tabela_categorias <- DT::datatable(ipca_categorias %>%
ungroup %>%
select(!c(id_categoria)) %>%
mutate(across(c(ano,mes), ~ factor(.,ordered = T))),
rownames = FALSE,
options = list(pageLength = 20,
scrollX = TRUE,
searchHighlight = TRUE,
language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json')
),
class =  c('compact', 'white-space: nowrap', 'stripe'),
filter = 'top',
colnames = c('Ano',
'Mês',
'Descrição do Grupo/Subgrupo',
'Peso Mensal',
'Variação Mensal (%)',
'Variação acumulada em 12 meses (%)')
)
tabela_categorias
tabela_categorias <- DT::datatable(ipca_categorias %>%
ungroup %>%
select(!c(id_categoria,variacao_acumulada)) %>%
mutate(across(c(ano,mes), ~ factor(.,ordered = T))),
rownames = FALSE,
options = list(pageLength = 20,
scrollX = TRUE,
searchHighlight = TRUE,
language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json')
),
class =  c('compact', 'white-space: nowrap', 'stripe'),
filter = 'top',
colnames = c('Ano',
'Mês',
'Descrição do Grupo/Subgrupo',
'Peso Mensal',
'Variação Mensal (%)',
'Variação acumulada em 12 meses (%)')
)
tabela_categorias
p_ipca_rm_mun
p_ipca_rm_mun <- ggplotly(ipca_rm_mun_plot, tooltip = c("x", "y")) %>%
layout(legend = list(orientation = "h", x = 0, y = -0.3, title = '')) %>%
config(modeBarButtons = list(list("resetScale2d"),list('toImage'), list('toggleSpikelines'),list('hoverCompareCartesian'),list('hoverClosestCartesian')), displaylogo = FALSE)
p_ipca_rm_mun
p_ipca_rm_mun <- ggplotly(ipca_rm_mun_plot, tooltip = c("x", "y")) %>%
layout(legend = list(orientation = "h", x = 0, y = -0.2, title = '')) %>%
config(modeBarButtons = list(list("resetScale2d"),list('toImage'), list('toggleSpikelines'),list('hoverCompareCartesian'),list('hoverClosestCartesian')), displaylogo = FALSE)
p_ipca_rm_mun
p_ipca_rm_mun <- p_ipca_rm_mun %>% layout(legend = list(x = 100, y = 0.5))
p_ipca_rm_mun
